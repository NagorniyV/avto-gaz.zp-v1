// –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä

document.addEventListener('DOMContentLoaded', function () {
  function calculateSavings() {
    // –û—Ç—Ä–∏–º—É—î–º–æ –∑–Ω–∞—á–µ–Ω–Ω—è –∑ –ø–æ–ª—ñ–≤ –≤–≤–æ–¥—É
    const fuelConsumption = parseFloat(document.getElementById('fuel-consumption').value) || 10;
    const annualMileage = parseFloat(document.getElementById('annual-mileage').value) || 15000;
    const petrolPrice = parseFloat(document.getElementById('petrol-price').value) || 55;
    const gasPrice = parseFloat(document.getElementById('gas-price').value) || 28;
    const gboCost = parseFloat(document.getElementById('gbo-cost').value) || 25000;
    
    // –†–æ–∑—Ä–∞—Ö—É–Ω–∫–∏
    const annualPetrolCost = (annualMileage / 100) * fuelConsumption * petrolPrice;
    const annualGasCost = (annualMileage / 100) * fuelConsumption * 1.1 * gasPrice; // +10% –≤–∏—Ç—Ä–∞—Ç–∞ –≥–∞–∑—É
    const annualSaving = annualPetrolCost - annualGasCost;
    const paybackMonths = (gboCost / annualSaving) * 12;
    const per100kmSaving = (fuelConsumption * petrolPrice) - (fuelConsumption * 1.1 * gasPrice);
    const total3YearSaving = annualSaving * 3 - gboCost;
    
    // –û–Ω–æ–≤–ª—é—î–º–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏
    document.getElementById('annual-saving').textContent = Math.round(annualSaving) + ' ‚Ç¥';
    document.getElementById('payback-period').textContent = Math.round(paybackMonths) + ' –º—ñ—Å—è—Ü—ñ–≤';
    document.getElementById('per-100km').textContent = Math.round(per100kmSaving) + ' ‚Ç¥';
    document.getElementById('total-saving').textContent = Math.round(total3YearSaving) + ' ‚Ç¥';
  }
  
  // –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∏–π —Ä–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ –ø—Ä–∏ –∑–º—ñ–Ω—ñ –∑–Ω–∞—á–µ–Ω—å
  document.querySelectorAll('input').forEach(input => {
    input.addEventListener('input', calculateSavings);
  });
  
  // –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∏–π —Ä–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ
  calculateSavings();
});

// –∫–æ–Ω–µ—Ü –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞

 document.addEventListener('DOMContentLoaded', function() {
        const faqItems = document.querySelectorAll('.faq-item');
        
        faqItems.forEach(item => {
            const question = item.querySelector('.faq-question');
            
            question.addEventListener('click', () => {
                // –ó–∞–∫—Ä–∏–≤–∞—î–º–æ –≤—Å—ñ —ñ–Ω—à—ñ –≤—ñ–¥–∫—Ä–∏—Ç—ñ –ø–∏—Ç–∞–Ω–Ω—è
                faqItems.forEach(otherItem => {
                    if (otherItem !== item && otherItem.classList.contains('active')) {
                        otherItem.classList.remove('active');
                    }
                });
                
                // –ü–µ—Ä–µ–º–∏–∫–∞—î–º–æ –ø–æ—Ç–æ—á–Ω–∏–π –µ–ª–µ–º–µ–Ω—Ç
                item.classList.toggle('active');
            });
        });
        
        // –í—ñ–¥–∫—Ä–∏–≤–∞—î–º–æ –ø–µ—Ä—à–µ –ø–∏—Ç–∞–Ω–Ω—è –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º
        if (faqItems.length > 0) {
            faqItems[0].classList.add('active');
        }
    });


    
// –ú–û–î–ê–õ–¨–ù–û–ï –û–ö–ù–û –ò –ë–£–†–ì–ï–† –ö–ù–û–ü–ö–ê
document.addEventListener('DOMContentLoaded', function() {
    console.log('üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞');
    
    // –≠–ª–µ–º–µ–Ω—Ç—ã –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω
    const callbackModal = document.getElementById('callbackModal');
    const successModal = document.getElementById('successModal');
    const modalForm = document.getElementById('modalForm');
    
    console.log('–ù–∞–π–¥–µ–Ω—ã —ç–ª–µ–º–µ–Ω—Ç—ã:', {
        callbackModal: !!callbackModal,
        successModal: !!successModal,
        modalForm: !!modalForm
    });

    // –û–¢–ö–†–´–¢–ò–ï –ú–û–î–ê–õ–¨–ù–û–ì–û –û–ö–ù–ê
    document.addEventListener('click', function(e) {
        // –û—Ç–∫—Ä—ã—Ç–∏–µ –ø–æ –∫–Ω–æ–ø–∫–µ details-hero-btn
        if (e.target.classList.contains('details-hero-btn')) {
            console.log('‚úÖ –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ details-hero-btn');
            
            if (callbackModal) {
                callbackModal.style.display = 'block';
                document.body.style.overflow = 'hidden';
                console.log('‚úÖ –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –æ—Ç–∫—Ä—ã—Ç–æ');
            } else {
                console.error('‚ùå callbackModal –Ω–µ –Ω–∞–π–¥–µ–Ω');
            }
        }
    });

    // –ó–ê–ö–†–´–¢–ò–ï –ú–û–î–ê–õ–¨–ù–û–ì–û –û–ö–ù–ê
    document.addEventListener('click', function(e) {
        // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ –∫—Ä–µ—Å—Ç–∏–∫—É
        if (e.target.classList.contains('modal-close')) {
            closeModals();
        }
        
        // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ –∫–ª–∏–∫—É –≤–Ω–µ –æ–∫–Ω–∞
        if (e.target === callbackModal || e.target === successModal) {
            closeModals();
        }
    });

    // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ ESC
    document.addEventListener('keydown', function(e) {
        if (e.key === 'Escape') {
            closeModals();
        }
    });

    function closeModals() {
        if (callbackModal) callbackModal.style.display = 'none';
        if (successModal) successModal.style.display = 'none';
        document.body.style.overflow = 'auto';
    }

    // –û–ë–†–ê–ë–û–¢–ö–ê –§–û–†–ú–´
    if (modalForm) {
        modalForm.addEventListener('submit', function(e) {
            e.preventDefault();
            console.log('üìß –û–¢–ü–†–ê–í–ö–ê –§–û–†–ú–´ - –ù–ê–ß–ê–õ–û');
            
            const phone = document.getElementById('modalPhone').value;
            
            // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞
            if (!phone) {
                alert('–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É');
                return;
            }

            // –°–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö —Ñ–æ—Ä–º—ã
            const formData = {
                name: document.getElementById('modalName').value,
                phone: phone,
                carModel: document.getElementById('carModel').value,
                timestamp: new Date().toLocaleString('uk-UA')
            };

            console.log('üìß –î–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã:', formData);
            console.log('üü¢ –í–´–ó–´–í–ê–ï–ú sendToTelegram...');

            // –í–´–ó–û–í –§–£–ù–ö–¶–ò–ò
            try {
                sendToTelegram(formData);
                console.log('üü¢ sendToTelegram –í–´–ó–í–ê–ù–ê –£–°–ü–ï–®–ù–û');
            } catch (error) {
                console.error('‚ùå –û–®–ò–ë–ö–ê –ø—Ä–∏ –≤—ã–∑–æ–≤–µ sendToTelegram:', error);
            }

            // –ü–æ–∫–∞–∑ –æ–∫–Ω–∞ —É—Å–ø–µ—Ö–∞
            if (callbackModal) callbackModal.style.display = 'none';
            if (successModal) successModal.style.display = 'block';

            // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∑–∞–∫—Ä—ã—Ç–∏–µ —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
            setTimeout(() => {
                closeModals();
                modalForm.reset();
            }, 3000);
        });
    }

    // –ú–ê–°–ö–ê –î–õ–Ø –¢–ï–õ–ï–§–û–ù–ê
    const modalPhone = document.getElementById('modalPhone');
    if (modalPhone) {
        modalPhone.addEventListener('input', function(e) {
            let value = e.target.value.replace(/\D/g, '');
            if (value.startsWith('38')) {
                value = value.substring(2);
            }
            let formattedValue = '+38 (';
            
            if (value.length > 0) {
                formattedValue += value.substring(0, 3);
            }
            if (value.length > 3) {
                formattedValue += ') ' + value.substring(3, 6);
            }
            if (value.length > 6) {
                formattedValue += '-' + value.substring(6, 10);
            }
            
            e.target.value = formattedValue;
        });
    }

    // –ë–£–†–ì–ï–† –ú–ï–ù–Æ
    const burgerMenu = document.querySelector('.burger-menu');
    const mobileHeaderColumn = document.querySelector('.mobile-header-colum');
    
    if (burgerMenu && mobileHeaderColumn) {
        burgerMenu.addEventListener('click', function(e) {
            e.stopPropagation();
            burgerMenu.classList.toggle('active');
            mobileHeaderColumn.classList.toggle('active');
            document.body.style.overflow = mobileHeaderColumn.classList.contains('active') ? 'hidden' : '';
        });

        // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–µ–Ω—é –ø—Ä–∏ –∫–ª–∏–∫–µ –Ω–∞ —Å—Å—ã–ª–∫—É
        const navLinks = document.querySelectorAll('.mobile-header-colum .nav-link');
        navLinks.forEach(link => {
            link.addEventListener('click', function() {
                burgerMenu.classList.remove('active');
                mobileHeaderColumn.classList.remove('active');
                document.body.style.overflow = '';
            });
        });

        // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–µ–Ω—é –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –æ–±–ª–∞—Å—Ç–∏
        document.addEventListener('click', function(event) {
            if (mobileHeaderColumn.classList.contains('active') && 
                !mobileHeaderColumn.contains(event.target) && 
                !burgerMenu.contains(event.target)) {
                burgerMenu.classList.remove('active');
                mobileHeaderColumn.classList.remove('active');
                document.body.style.overflow = '';
            }
        });

        // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–µ–Ω—é –ø—Ä–∏ —Ä–µ—Å–∞–π–∑–µ
        window.addEventListener('resize', function() {
            if (window.innerWidth > 768 && mobileHeaderColumn.classList.contains('active')) {
                burgerMenu.classList.remove('active');
                mobileHeaderColumn.classList.remove('active');
                document.body.style.overflow = '';
            }
        });
    }
});

// –§–£–ù–ö–¶–ò–Ø –û–¢–ü–†–ê–í–ö–ò –í TELEGRAM - –£–ü–†–û–©–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø
function sendToTelegram(data) {
    console.log('üü¢ sendToTelegram –í–´–ó–í–ê–ù–ê!', data);
    
    const botToken = '8270148488:AAGbJDswx7zG5mSfis0StHoDFNLKOHq09x4';
    const chatIds = ['398501551'];
    
    // –ö–æ–¥–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è URL
    const text = encodeURIComponent(
        `üìû –ù–æ–≤–∞ –∑–∞—è–≤–∫–∞ –∑ —Å–∞–π—Ç—É!\n\nüë§ –Ü–º'—è: ${data.name || '–ù–µ –≤–∫–∞–∑–∞–Ω–æ'}\nüì± –¢–µ–ª–µ—Ñ–æ–Ω: ${data.phone}\nüöó –ê–≤—Ç–æ: ${data.carModel || '–ù–µ –≤–∫–∞–∑–∞–Ω–æ'}\n‚è∞ –ß–∞—Å: ${data.timestamp}`
    );
    
    console.log('üü° –ó–∞–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:', text);

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤—Å–µ–º –≤ –º–∞—Å—Å–∏–≤–µ —á–µ—Ä–µ–∑ GET –∑–∞–ø—Ä–æ—Å—ã—ã—ã—ã—ã—ã—ã—ã—ã—ã
    chatIds.forEach((chatId, index) => {
        console.log(`üü° –û—Ç–ø—Ä–∞–≤–∫–∞ ${index + 1}/${chatIds.length} –¥–ª—è chat_id: ${chatId}`);
        
        const url = `https://api.telegram.org/bot${botToken}/sendMessage?chat_id=${chatId}&text=${text}&parse_mode=HTML`;
        
        console.log('üü° URL –∑–∞–ø—Ä–æ—Å–∞:', url);
        
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º fetch —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫
        fetch(url)
            .then(response => {
                console.log(`üü° –û—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω –¥–ª—è ${chatId}, —Å—Ç–∞—Ç—É—Å:`, response.status);
                if (!response.ok) {
                    throw new Error(`HTTP error! status: ${response.status}`);
                }
                return response.json();
            })
            .then(result => {
                console.log(`‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç –¥–ª—è ${chatId}:`, result);
                if (result.ok) {
                    console.log(`‚úÖ –£–°–ü–ï–•: –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram –¥–ª—è ${chatId}`);
                } else {
                    console.error(`‚ùå –û–®–ò–ë–ö–ê Telegram –¥–ª—è ${chatId}:`, result.description);
                    
                    // –ï—Å–ª–∏ –æ—à–∏–±–∫–∞ 403 - –±–æ—Ç –Ω–µ –º–æ–∂–µ—Ç –ø–∏—Å–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
                    if (result.error_code === 403) {
                        console.error(`‚ùå –ë–æ—Ç –Ω–µ –º–æ–∂–µ—Ç –ø–∏—Å–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${chatId}. –ù–∞—á–Ω–∏—Ç–µ –¥–∏–∞–ª–æ–≥ —Å –±–æ—Ç–æ–º.`);
                    }
                }
            })
            .catch(error => {
                console.error(`‚ùå –û–®–ò–ë–ö–ê —Å–µ—Ç–∏ –¥–ª—è ${chatId}:`, error);
                
                // –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Å–ø–æ—Å–æ–± —á–µ—Ä–µ–∑ Image (–æ–±—Ö–æ–¥–∏—Ç CORS)
                const img = new Image();
                img.src = url;
                console.log('üü° –ü—Ä–æ–±—É–µ–º –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —á–µ—Ä–µ–∑ Image:', url);
            });
    });
    
    console.log('üü¢ sendToTelegram –ó–ê–í–ï–†–®–ï–ù–ê');
}

// –ê–õ–¨–¢–ï–†–ù–ê–¢–ò–í–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø –ï–°–õ–ò –û–°–ù–û–í–ù–ê–Ø –ù–ï –†–ê–ë–û–¢–ê–ï–¢
function sendToTelegramAlternative(data) {
    console.log('üü¢ –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ –≤ Telegram');
    
    const botToken = '8370472423:AAFbn4BXuexXC5wk-GP5G3mpsQg02LWZpZY';
    const chatIds = ['398501551', '484881476'];
    
    const text = `üìû –ù–æ–≤–∞ –∑–∞—è–≤–∫–∞ –∑ —Å–∞–π—Ç—É!%0A%0Aüë§ –Ü–º'—è: ${data.name || '–ù–µ –≤–∫–∞–∑–∞–Ω–æ'}%0Aüì± –¢–µ–ª–µ—Ñ–æ–Ω: ${data.phone}%0Aüöó –ê–≤—Ç–æ: ${data.carModel || '–ù–µ –≤–∫–∞–∑–∞–Ω–æ'}%0A‚è∞ –ß–∞—Å: ${data.timestamp}`;
    
    chatIds.forEach(chatId => {
        const url = `https://api.telegram.org/bot${botToken}/sendMessage?chat_id=${chatId}&text=${text}&parse_mode=HTML`;
        
        // –°–ø–æ—Å–æ–± 1: —á–µ—Ä–µ–∑ Image (—Ä–∞–±–æ—Ç–∞–µ—Ç –≤—Å–µ–≥–¥–∞)
        const img = new Image();
        img.src = url;
        console.log('üü° –û—Ç–ø—Ä–∞–≤–∫–∞ —á–µ—Ä–µ–∑ Image –¥–ª—è', chatId, ':', url);
        
        // –°–ø–æ—Å–æ–± 2: —á–µ—Ä–µ–∑ XMLHttpRequest
        try {
            const xhr = new XMLHttpRequest();
            xhr.open('GET', url, true);
            xhr.send();
            console.log('üü° –û—Ç–ø—Ä–∞–≤–∫–∞ —á–µ—Ä–µ–∑ XMLHttpRequest –¥–ª—è', chatId);
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ XMLHttpRequest:', error);
        }
    });
}